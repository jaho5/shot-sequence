{"ast":null,"code":"const HORIZONTAL_POSITIONS = ['Left', 'Center Left', 'Center', 'Center Right', 'Right'];\nconst DEPTH_POSITIONS = ['Back', 'Mid Back', 'Mid', 'Mid Front', 'Front'];\nexport const generateRandomShot = space => {\n  const randomHorizontal = HORIZONTAL_POSITIONS[Math.floor(Math.random() * HORIZONTAL_POSITIONS.length)];\n  const randomDepth = DEPTH_POSITIONS[Math.floor(Math.random() * DEPTH_POSITIONS.length)];\n  return {\n    horizontal: randomHorizontal,\n    depth: randomDepth,\n    space: space\n  };\n};\nexport const generateShotSequence = numShots => {\n  const shots = [];\n  for (let i = 0; i < numShots; i++) {\n    const space = i % 2 + 1; // Alternates between 1 and 2\n    shots.push(generateRandomShot(space));\n  }\n  return shots;\n};\nexport const getPositionCoordinates = (horizontal, depth) => {\n  const horizontalIndex = HORIZONTAL_POSITIONS.indexOf(horizontal);\n  const depthIndex = DEPTH_POSITIONS.indexOf(depth);\n\n  // Convert to grid coordinates (0-4 for both x and y)\n  return {\n    x: horizontalIndex,\n    y: depthIndex\n  };\n};\nexport { HORIZONTAL_POSITIONS, DEPTH_POSITIONS };","map":{"version":3,"names":["HORIZONTAL_POSITIONS","DEPTH_POSITIONS","generateRandomShot","space","randomHorizontal","Math","floor","random","length","randomDepth","horizontal","depth","generateShotSequence","numShots","shots","i","push","getPositionCoordinates","horizontalIndex","indexOf","depthIndex","x","y"],"sources":["/home/jasonho/projects/shot-sequence/src/utils/shotGenerators.js"],"sourcesContent":["const HORIZONTAL_POSITIONS = ['Left', 'Center Left', 'Center', 'Center Right', 'Right'];\nconst DEPTH_POSITIONS = ['Back', 'Mid Back', 'Mid', 'Mid Front', 'Front'];\n\nexport const generateRandomShot = (space) => {\n  const randomHorizontal = HORIZONTAL_POSITIONS[Math.floor(Math.random() * HORIZONTAL_POSITIONS.length)];\n  const randomDepth = DEPTH_POSITIONS[Math.floor(Math.random() * DEPTH_POSITIONS.length)];\n  \n  return {\n    horizontal: randomHorizontal,\n    depth: randomDepth,\n    space: space\n  };\n};\n\nexport const generateShotSequence = (numShots) => {\n  const shots = [];\n  \n  for (let i = 0; i < numShots; i++) {\n    const space = (i % 2) + 1; // Alternates between 1 and 2\n    shots.push(generateRandomShot(space));\n  }\n  \n  return shots;\n};\n\nexport const getPositionCoordinates = (horizontal, depth) => {\n  const horizontalIndex = HORIZONTAL_POSITIONS.indexOf(horizontal);\n  const depthIndex = DEPTH_POSITIONS.indexOf(depth);\n  \n  // Convert to grid coordinates (0-4 for both x and y)\n  return {\n    x: horizontalIndex,\n    y: depthIndex\n  };\n};\n\nexport { HORIZONTAL_POSITIONS, DEPTH_POSITIONS };"],"mappings":"AAAA,MAAMA,oBAAoB,GAAG,CAAC,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,cAAc,EAAE,OAAO,CAAC;AACvF,MAAMC,eAAe,GAAG,CAAC,MAAM,EAAE,UAAU,EAAE,KAAK,EAAE,WAAW,EAAE,OAAO,CAAC;AAEzE,OAAO,MAAMC,kBAAkB,GAAIC,KAAK,IAAK;EAC3C,MAAMC,gBAAgB,GAAGJ,oBAAoB,CAACK,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGP,oBAAoB,CAACQ,MAAM,CAAC,CAAC;EACtG,MAAMC,WAAW,GAAGR,eAAe,CAACI,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGN,eAAe,CAACO,MAAM,CAAC,CAAC;EAEvF,OAAO;IACLE,UAAU,EAAEN,gBAAgB;IAC5BO,KAAK,EAAEF,WAAW;IAClBN,KAAK,EAAEA;EACT,CAAC;AACH,CAAC;AAED,OAAO,MAAMS,oBAAoB,GAAIC,QAAQ,IAAK;EAChD,MAAMC,KAAK,GAAG,EAAE;EAEhB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,QAAQ,EAAEE,CAAC,EAAE,EAAE;IACjC,MAAMZ,KAAK,GAAIY,CAAC,GAAG,CAAC,GAAI,CAAC,CAAC,CAAC;IAC3BD,KAAK,CAACE,IAAI,CAACd,kBAAkB,CAACC,KAAK,CAAC,CAAC;EACvC;EAEA,OAAOW,KAAK;AACd,CAAC;AAED,OAAO,MAAMG,sBAAsB,GAAGA,CAACP,UAAU,EAAEC,KAAK,KAAK;EAC3D,MAAMO,eAAe,GAAGlB,oBAAoB,CAACmB,OAAO,CAACT,UAAU,CAAC;EAChE,MAAMU,UAAU,GAAGnB,eAAe,CAACkB,OAAO,CAACR,KAAK,CAAC;;EAEjD;EACA,OAAO;IACLU,CAAC,EAAEH,eAAe;IAClBI,CAAC,EAAEF;EACL,CAAC;AACH,CAAC;AAED,SAASpB,oBAAoB,EAAEC,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}